{"version":3,"sources":["Components/Navbar/Navbar.js","Components/Card/Card.js","redux/articles/articleReducer.js","Containers/Home/Home.js","Containers/Contact/Contact.js","Components/Form/Form.js","Containers/AddArticle/AddArticle.js","Containers/Article/Article.js","App.js","redux/store.js","index.js"],"names":["Navbar","useState","toggleMenu","setToggleMenu","window","innerWidth","largeur","setLargeur","useEffect","changeWidth","addEventListener","removeEventListener","className","to","onClick","Card","props","children","INITIAL_STATE","articles","articleReducer","state","action","type","newArr","unshift","payload","Home","useSelector","dispatch","useDispatch","length","fetch","then","response","json","data","map","item","title","pathname","replace","trim","body","uuidv4","Contact","Form","inputsRef","useRef","addRefs","el","current","includes","push","onSubmit","e","preventDefault","newArticle","value","target","reset","htmlFor","ref","id","placeholder","AddArticle","Article","location","useLocation","console","log","App","basename","process","path","exact","component","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db027314.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport './Navbar.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar() {\r\n\r\n    const [toggleMenu, setToggleMenu] = useState(false);\r\n    const [largeur, setLargeur] = useState(window.innerWidth); //prend la largeur de la fenêtre\r\n\r\n    const toggleNav = () =>{\r\n        setToggleMenu(!toggleMenu);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const changeWidth = () =>{\r\n            setLargeur(window.innerWidth);\r\n        }\r\n\r\n        window.addEventListener('resize', changeWidth); //quand la fenêtre change de taille\r\n\r\n        return ()=>{\r\n            window.removeEventListener('resize', changeWidth);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <nav>\r\n            {(toggleMenu || largeur >600) && (\r\n                <ul className=\"liste\">\r\n                    <Link to=\"/\">\r\n                        <li className=\"items\">Accueil</li>\r\n                    </Link>\r\n                    <Link to=\"/ecrire\">\r\n                        <li className=\"items\">Écrire</li>\r\n                    </Link>\r\n                    <Link to=\"/contact\">\r\n                        <li className=\"items\">Contact</li>\r\n                    </Link>\r\n                </ul>\r\n            )}\r\n            <button onClick={toggleNav} className=\"btn\">BTN</button>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Card.css'\r\n\r\nexport default function Card(props) {\r\n    return (\r\n        <div className=\"card\">\r\n            {/* Quand on ne sais pas quelles propriétés vous remonter */}\r\n            {props.children} \r\n        </div>\r\n    )\r\n}\r\n","const INITIAL_STATE = {\r\n    articles: []\r\n}\r\n\r\nfunction articleReducer(state = INITIAL_STATE, action){\r\n    switch(action.type){\r\n        //Récupére l'article créé\r\n        case \"ADDARTICLE\": {\r\n            const newArr= [...state.articles];\r\n            newArr.unshift(action.payload); //Ajoute l'article créé au début\r\n\r\n            return {\r\n                articles: newArr\r\n            }\r\n        }\r\n        case \"LOADARTICLES\": {\r\n            return {\r\n                ...state,\r\n                articles: action.payload\r\n            }\r\n        }\r\n        default:\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default articleReducer;\r\n\r\n//Appel API\r\n//fonction appelée par thunk middleware\r\nexport const getArticles = () => dispatch => {\r\n    fetch('https://jsonplaceholder.typicode.com/posts')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        dispatch({\r\n            type: 'LOADARTICLES',\r\n            payload: data\r\n        })\r\n    })\r\n}\r\n","import React from 'react'\r\nimport './Home.css'\r\nimport Card from '../../Components/Card/Card'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useEffect, useState } from 'react'\r\nimport { getArticles } from '../../redux/articles/articleReducer'\r\nimport {v4 as uuidv4} from 'uuid'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Home() {\r\n\r\n    const {articles} = useSelector(state => ({\r\n        ...state.articleReducer\r\n    }))\r\n\r\n    //Création d'une fonction pour utilise useDispatch\r\n    const dispatch = useDispatch();\r\n\r\n    //Quand le composant aura fini de s'afficher\r\n    useEffect(() => {\r\n        if(articles.length === 0){\r\n            //Si notre tableau est vide on veut le remplir, sinon on ne rappelle pas l'API\r\n            dispatch(getArticles());\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h1 className='home-title'>Tous les articles</h1>\r\n            <div className=\"container-cards\">\r\n                {/* Pour chaque élément du tableau articles alors retourne ... */}\r\n                {articles.map(item => {\r\n                    return(\r\n                        <Card key={uuidv4()}>\r\n                            <h2>{item.title}</h2>\r\n                            {/* Permet de remplacer les espaces par des tirets */}\r\n                            <Link \r\n                                to={{\r\n                                    pathname: `articles/${item.title\r\n                                    .replace(/\\s+/g, '-')\r\n                                    .trim()}`,\r\n                                    state: {\r\n                                        title: item.title,\r\n                                        body: item.body,\r\n                                    },\r\n                                }}\r\n                            >\r\n                            Lire l'article\r\n                            </Link>    \r\n                        </Card>\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./Contact.css\"\r\n\r\nexport default function Contact() {\r\n    return (\r\n        <div className=\"container-contact\">\r\n            <h1>Contactez-nous</h1>\r\n            <p>Par mail : blogreact@gmail.com</p>\r\n            <p>Par téléphone : XX-XX-XX</p>\r\n            <p>Rejoignez-nous sur les réseaux</p>\r\n            <ul>\r\n                <li>Facebook</li>\r\n                <li>Twitter</li>\r\n                <li>YouTube</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useRef} from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport \"./Form.css\"\r\n\r\nexport default function Form() {\r\n    \r\n    //////////////\r\n    //version classique avec state\r\n    // const [article, setArticle] = useState({\r\n    //     title:\"\",\r\n    //     body:\"\"\r\n    // })\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //Quand on utilise le form\r\n    const handleForm = e =>{\r\n        e.preventDefault();\r\n\r\n        //VERSION SANS STATE UNCONTROLS INPUTS\r\n        //j'ajouter les données dans un nouvel article\r\n        const newArticle = {\r\n            title: inputsRef.current[0].value,\r\n            body: inputsRef.current[1].value,\r\n        }\r\n\r\n        //Envoi des données\r\n        dispatch({\r\n            type: \"ADDARTICLE\",\r\n            // payload: article\r\n            //VERSION SANS STATE\r\n            payload: newArticle\r\n        })\r\n\r\n        //Remise à zéro des inputs\r\n        e.target.reset();\r\n\r\n        // //Remise à zéro des inputs\r\n        // setArticle({\r\n        //     title: \"\",\r\n        //     body: \"\"\r\n        // })\r\n    }\r\n\r\n    //VERSION SANS STATE\r\n    //Création d'un tableau vide\r\n    const inputsRef = useRef([]);\r\n\r\n    //ajout des données dans le tableau vide\r\n    const addRefs = el => {\r\n        if(el && !inputsRef.current.includes(el)){ //Si il y a un élément et qu'il n'est pas présent dans le tableau alors\r\n           inputsRef.current.push(el) \r\n        }\r\n    }\r\n\r\n    //VERSION CLASSIQUE = Quand on utilie les inputs\r\n    // const handleInputs = e =>{\r\n    //     if(e.target.classList.contains('inp-title')){\r\n    //         //Je mets à jour l'objet copié avec le nouveau titre d'article\r\n    //         const newObjetState = {...article, title: e.target.value};\r\n    //         //Je change article avec le nouvel objet\r\n    //         setArticle(newObjetState);\r\n    //     } else if(e.target.classList.contains('inp-body')){\r\n    //          const newObjetState = {...article, body: e.target.value};\r\n    //         setArticle(newObjetState);\r\n    //     };\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"title-form\">Écrivez un article</h1>\r\n            <form onSubmit={handleForm} className=\"container-form\">\r\n                <label htmlFor=\"title\">Titre</label>\r\n                <input \r\n                //VERSION CLASSIQUE = Two ways data binding : on lie à la fois la donnée et l'élément dans les 2 sens\r\n                // onChange={handleInputs} \r\n                // value={article.title}\r\n                //VERSION SANS STATE\r\n                ref={addRefs}\r\n                type=\"text\" \r\n                id=\"title\" \r\n                placeholder=\"Entre votre nom\"\r\n                className=\"inp-title\" />\r\n\r\n                <label htmlFor=\"article\">Votre article</label>\r\n                <textarea \r\n                //VERSION CLASSIQUE =\r\n                // onChange={handleInputs} \r\n                // value={article.body}\r\n                //VERSION SANS STATE\r\n                ref={addRefs}\r\n                id=\"article\" \r\n                placeholder=\"Votre article\"\r\n                className=\"inp-body\"></textarea>\r\n\r\n                <button>Envoyez l'article</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Form from '../../Components/Form/Form'\r\n\r\nexport default function AddArticle() {\r\n    return (\r\n        <>\r\n            <Form/>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport \"./Article.css\"\r\n\r\nexport default function Article() {\r\n\r\n    //Permet de récupérer ce qui a été envoyé dans l'URL\r\n    const location = useLocation();\r\n    console.log(location);\r\n\r\n\r\n    return (\r\n        <div className=\"article-content\">\r\n            <h2>Votre article : {location.state.title}</h2>\r\n            <p>{location.state.body}</p>\r\n        </div>\r\n    )\r\n}\r\n","import Navbar from './Components/Navbar/Navbar'\nimport Home from './Containers/Home/Home';\nimport Contact from './Containers/Contact/Contact'\nimport AddArticle from './Containers/AddArticle/AddArticle'\nimport Article from './Containers/Article/Article'\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\n\nfunction App() {\n  return (\n    <>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Navbar/>\n      <Switch>\n        <Route path='/' exact component={Home}/>\n        <Route path='/ecrire' exact component={AddArticle}/>\n        <Route path='/contact' exact component={Contact}/>\n        <Route path='/articles/:slug' exact component={Article}/>\n      </Switch>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","import {createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport articleReducer from \"./articles/articleReducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n    articleReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux' //sert à envoyer les données du store vers l'app\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}